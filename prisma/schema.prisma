// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
   provider = "mysql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  SUPER_ADMIN
  ADMIN
  PT
  MEMBER  
}

enum PaymentStatus{
  PENDING
  PAID
  CANCELLED
}

model Gym {
  id Int @id @default(autoincrement())
  name String @unique
  address String?
  isActive Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  users User[]
}

model User  {
  id Int @id @default(autoincrement())
  name String
  email String @unique
  phone String @unique
  password String
  dateOfBirth DateTime
  role UserRole @default(MEMBER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  gymId Int?
  gym Gym? @relation(fields: [gymId], references: [id])

  workoutPlanAsMember WorkoutPlan[] @relation("MemberPlans")
  workoutPlanAsPT WorkoutPlan[] @relation("PtPlans")

  memberships UserMembership[]
   @@map("User")
}

model WorkoutPlan {
  id Int @id @default(autoincrement())
  title String
  content String
  date DateTime

  memberId Int
  ptId Int

  member User @relation("MemberPlans", fields: [memberId], references: [id])
  pt User @relation("PtPlans", fields: [ptId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model MembershipPlan{
  id Int @id @default(autoincrement())
  name String @unique
  price Decimal @db.Decimal(12,2)
  durationInDays Int
  description String?
  discount Int? @default(0)
  isActive Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  memberships UserMembership[]

}

model UserMembership{
  id Int @id @default(autoincrement())
  userId Int
  planId Int
  startDate DateTime @default(now())
  endDate DateTime
  finalPrice Float @default(0.0)
  paymentStatus PaymentStatus @default(PENDING) // "pending" | "paid" | "cancelled"
  isActive Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
  plan MembershipPlan @relation(fields: [planId], references: [id])

  @@index([userId])
  @@index([planId])
}
